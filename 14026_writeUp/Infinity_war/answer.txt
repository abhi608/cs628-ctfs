Since the password was of 5 characters(only vowels and numbers), the time complexity of bruteforcing was O(15^5). Also, when I used some random test credentials to log in, I found a <captcha> in the response cookie. With this information, I bruteforced my password. The script used for this is <infinity.py>. Once I had my password, I logged into the portal. Then I had to enter <hl>, <hr> and <message> such that there is a collison with the given <hl>, <hr> and <message>. I downloaded the given file and understood that first it broke the 16 character message into 4 blocks of size 4. It then used initial value of <hl> and <hr> to encode the block and obtained new values of <hl> and <hl>. This was done 4 times and then it returned <hl>, <hr> and <message>. I used the given python script <question.py> to get final values of <hl> and <hr>. To decode it, first I bruteforced the value of <hl> and last 4 characters of message such that the resulting <hl> was same as our desired <hl>. I then used these 4 characters of message and bruteforced on <hr> such that the resulting <hr> was same as our desired <hr>. I did this 4 times and this gave me the <message>, <hl> and hr>. Upon submitting it on the portal, I got the flag. The decoder script is <solver.py>.