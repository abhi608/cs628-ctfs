Read about 8-N-1 parity from http://www.modemhelp.net/faqs/8n1.shtml. This helped in decoding the 11 bit format. In 11 bit data, first bit was always 1(indicating start of new data) and last bit was always 0(indicating that data is over). Actual data was from 2nd to 9th bit and 10th bit was parity bit. Since, it was given odd parity which basically meant parity bit is 0 for odd number of 1s and it's 1 for even number of 1s in actual 8-bit data. Wrote a small script which connected to the given host and port and checked if given 11 bits are valid, if they are, it converts corresponding 8-bit data to ASCII representation and add it to flag string (and then send next bit as 1 to the server). If not valid, it simply ignores the 11-bit data and sends a 0 to server.
On running the script <parity_match.py>, flag was displayed.

Note: Sometimes, we need to run the script more than once as connection is closed by server. So, keep on running the script until whole flag is recovered.